setwd("C:/DSA/FCD/BigDataRAzure/Cap18/Analise-Financeira-Dados-Hospitalares")
read.csv("dataset.csv")
dados = read.csv("dataset.csv")
library(dplyr)
library(sqldf)
View(dados)
nome_colunas = c("Idade", "Sexo", "TempoInternaçao", "Raça", "CustoInternaçao", "GrupoDiagnosticoRefinado")
names(dados) = nome_colunas
View(dados)
str(dados)
dados$Sexo = as.factor(dados$Sexo)
# Checando os tipos de dados
str(dados)
?as.factor()
View(dados)
dados$Sexo = as.factor(dados$Sexo, levels = c(0, 1), labels = c("Masculino", "Feminino"))
dados$Sexo = as.factor(dados$Sexo, labels = c("Masculino", "Feminino"))
dados = read.csv("dataset.csv")
# Renomeando as variáveis
nome_colunas = c("Idade", "Sexo", "TempoInternaçao", "Raça", "CustoInternaçao", "GrupoDiagnosticoRefinado")
names(dados) = nome_colunas
# Checando os tipos de dados
str(dados)
dados$Sexo = as.factor(dados$Sexo, labels = c("Masculino", "Feminino"))
dados$Sexo = as.factor(dados$Sexo, levels = c("Masculino", "Feminino"))
dados$Sexo = as.factor(dados$Sexo)
# Checando os tipos de dados
str(dados)
View(dados)
unique(dados$Sexo)
View(dados)
unique(dados$Raça)
is.na(dados$Raça)
is.na(dados)
sum(is.na(dados))
# Checando valores missing
sum(is.na(dados))
dim(dados)
dados = na.omit(dados)
dim(dados)
# Checando os tipos de dados
str(dados)
# Transformando a variável Raça para fator
unique(dados$Raça)
dados$Raça = as.factor(dados$Raça)
# Checando os tipos de dados
str(dados)
unique(dados$Idade)
unique(dados$TempoInternaçao)
unique(dados$CustoInternaçao)
unique(dados$GrupoDiagnosticoRefinado)
View(dados)
# Análise das variáveis numéricas com boxplot
boxplot(dados$Idade)
# Análise das variáveis numéricas com boxplot
boxplot(dados$TempoInternaçao)
# Análise das variáveis numéricas com boxplot
boxplot(dados$CustoInternaçao)
# Análise das variáveis numéricas com boxplot
boxplot(dados$GrupoDiagnosticoRefinado)
length(unique(dados$Idade))
length(unique(dados$TempoInternaçao))
length(unique(dados$CustoInternaçao))
length(unique(dados$GrupoDiagnosticoRefinado))
# Análise exploratória com linguagem SQL
?sqldf
sqldf("select * from dados", dados)
sqldf("select count(Raça) from dados", dados)
sqldf("select count(1) from dados", dados)
sqldf("select Raça from dados", dados)
sqldf("select Raça, count(*) from dados", dados)
sqldf("select Raça, count(1) from dados", dados)
sqldf("select Raça from dados", dados)
sqldf("select Idade, Raça, avg(Idade) from dados group by Raça", dados)
sqldf("select Idade, Raça, avg/(Idade/) from dados group by Raça", dados)
sqldf("select count(*) from dados", dados)
sqldf("select count(*) from dados")
sqldf("select count(Raça) from dados")
sqldf("select distinct Raça from dados")
sql("select avg(Idade) from dados group by idade")
sql("select avg(Idade) from dados")
sqldf("select avg(Idade) from dados")
sqldf("select avg(Idade) from dados group by Idade")
sqldf("select avg(Idade) from dados group by avg(Idade)")
sqldf("select avg(Idade) from dados")
sqldf("select Idade, count(*) from dados group by Idade desc")
sqldf("select Idade, count(*) from dados group by Idade")
sqldf("select Idade, count(*) from dados group by Idade DESC")
sqldf("select Idade, count(*) from dados group by Idade ASC")
sqldf("select Idade, count(*) from dados group by Idade")
sqldf("select var(Idade) from dados")
sqldf("select VAR(Idade) from dados")
sqldf("select var(Idade) from dados")
sqldf("select var_pop(Idade) from dados")
sqldf("select var_samp(Idade) from dados")
sqldf("select variance(Idade) from dados")
sqldf("select Idade, sum(CustoInternaçao) from dados group by Idade")
query = sqldf("select Idade, sum(CustoInternaçao) from dados group by Idade")
query
sqldf("select Idade, sum(CustoInternaçao) as Custo from dados group by Idade")
sqldf("select Idade, Custo from (select Idade, sum(CustoInternaçao) as Custo from dados group by Idade) group by Idade")
sqldf("select Idade, max(Custo) from (select Idade, sum(CustoInternaçao) as Custo from dados group by Idade) group by Idade")
sqldf("select Idade, max(Custo) from (select Idade, sum(CustoInternaçao) as Custo from dados group by Idade)")
sqldf("select Sexo, sum(CustoInternaçao) as Custo from dados group by Sexo")
sqldf("select Raça, avg(CustoInternaçao) as Custo from dados group by Raça")
sqldf("select Raça, avg(CustoInternaçao) as MediaCusto from dados group by Raça")
sqldf("select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade > 10 group by ")
sqldf("select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade > 10 group by Idade")
sqldf("select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade > 10")
sqldf("select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade > 10 group by Idade")
sqldf("select avg(CustoInternaçao) as MediaCusto from dados where Idade > 10")
sqldf("select Raça, avg(CustoInternaçao) as MediaCusto from dados group by Raça")
sqldf("select avg(CustoInternaçao) as MediaCusto from dados where Idade > 10")
sqldf("select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade>10 and MediaCusto>3000 group by Idade")
sqldf("select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade>10 group by Idade")
sqldf("Select Idade, MediaCusto from (select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade>10 group by Idade) where MediaCusto > 3000")
sqldf("select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade>10 group by Idade")
sqldf("select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade > 10 group by Idade")
sqldf("select avg(CustoInternaçao) as MediaCusto from dados where Idade > 10")
# Checando valores missing
sum(is.na(dados))
sqldf("select distinct Raça from dados")
sqldf("select Raça, count(Raça) from dados")
sqldf("select Raça, count(Raça) from dados group by Raça")
sqldf("select Raça, count(Raça) as NumeroRaças from dados group by Raça")
num_racas = sqldf("select Raça, count(Raça) as NumeroRaças from dados group by Raça")
num_racas
sqldf("select avg(Idade) from dados")
idade_media = sqldf("select avg(Idade) from dados")
idade_media
idade_moda = sqldf("select Idade, count(*) from dados group by Idade")
idade_moda
idade_moda = sqldf("select Idade, count(*) as Contagem from dados group by Idade order by Contagem desc")
idade_moda
idade_moda = sqldf("select Idade, count(*) as Contagem from dados group by Idade order by Contagem desc limit 1")
idade_moda
idade_variancia = sqldf("select variance(Idade) from dados")
idade_variancia
idade_variancia = sqldf("select variance(Idade) as Variancia from dados")
idade_variancia
gasto_total_idade = sqldf("select Idade, sum(CustoInternaçao) as Custo from dados group by Idade")
gasto_total_idade
gasto_total_idade_maior = sqldf("select Idade, max(Custo) from (select Idade, sum(CustoInternaçao) as Custo from dados group by Idade)")
gasto_total_idade_maior
gasto_total_idade_maior = sqldf("select Idade, max(Custo) as Custo from (select Idade, sum(CustoInternaçao) as Custo from dados group by Idade)")
gasto_total_idade_maior
gasto_total_genero = sqldf("select Sexo, sum(CustoInternaçao) as Custo from dados group by Sexo")
gasto_total_genero
gasto_medio_raca = sqldf("select Raça, avg(CustoInternaçao) as MediaCusto from dados group by Raça")
gasto_medio_raca
gasto_medio_idade_acima10 = sqldf("select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade > 10 group by Idade")
gasto_medio_idade_acima10
gasto_medio_idade_acima10_maior3k = sqldf("Select Idade, MediaCusto from (select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade>10 group by Idade) where MediaCusto > 3000")
gasto_medio_idade_acima10_maior3k
gasto_medio_idade_acima10_maior3k = sqldf("Select Idade, avg(CustoINternaçao) as MediaCusto from dados where MediaCusto > 10 group by Idade having MediaCusto > 3000")
gasto_medio_idade_acima10_maior3k = sqldf("Select Idade, avg(CustoIternaçao) as MediaCusto from dados where MediaCusto > 10 group by Idade having avg(CustoInternaçao) > 3000")
gasto_medio_idade_acima10_maior3k = sqldf("Select Idade, avg(CustoInternaçao) as MediaCusto from dados where MediaCusto > 10 group by Idade having avg(CustoInternaçao) > 3000")
gasto_medio_idade_acima10_maior3k = sqldf("Select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade > 10 group by Idade having avg(CustoInternaçao) > 3000")
gasto_medio_idade_acima10_maior3k
gasto_medio_idade_acima10_maior3k = sqldf("Select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade > 10 group by Idade having MediaCusto > 3000")
gasto_medio_idade_acima10_maior3k
hist(dados$Idade)
str(dados$Idade)
summary(dados$Idade)
resumo_idade = summary(as.factor(dados$Idade))
resumo_idade
resumo_idade
library(ggplot2)
ggplot(dados, aes(x = Idade)) +
geom_histogram()
ggplot(dados, aes(x = Idade)) +
geom_histogram() +
labs(title = "Distribuição da Idade")
ggplot(dados, aes(x = Idade)) +
geom_histogram() +
labs(title = "Distribuição da Idade") +
ylab(label = "")
ggplot(dados, aes(x = Idade)) +
geom_histogram() +
labs(title = "Distribuição da Idade") +
ylab(label = "")
resumo_idade
ggplot(dados, aes(x = Idade)) +
geom_histogram() +
labs(title = "Distribuição da Idade") +
ylab(label = "")
library(dplyr)
library(sqldf)
library(ggplot2)
dados = read.csv("dataset.csv")
View(dados)
# Renomeando as variáveis
nome_colunas = c("Idade", "Sexo", "TempoInternaçao", "Raça", "CustoInternaçao", "GrupoDiagnosticoRefinado")
names(dados) = nome_colunas
# Checando valores missing
sum(is.na(dados))
dim(dados)
# Excluindo a única linha que contem um valor missing
dados = na.omit(dados)
dim(dados)
# Checando os tipos de dados
str(dados)
# Transformando a variável Sexo para fator
unique(dados$Sexo)
dados$Sexo = as.factor(dados$Sexo)
# Transformando a variável Raça para fator
unique(dados$Raça)
dados$Raça = as.factor(dados$Raça)
# Análise exploratória com linguagem SQL, para responder as perguntas de negócio
# Pergunta 1:
# Quantas raças estão representadas no dataset?
num_racas = sqldf("select Raça, count(Raça) as NumeroRaças from dados group by Raça")
num_racas
# Existem 6 raças no dataset
# Pergunta 2:
# Qual a idade média dos pacientes?
idade_media = sqldf("select avg(Idade) from dados")
idade_media
# A média de idade é de 5 anos
# Pergunta 3:
# Qual a moda da idade dos pacientes?
idade_moda = sqldf("select Idade, count(*) as Contagem from dados group by Idade order by Contagem desc limit 1")
idade_moda
# A idade que mais aparece é 0, com 306 registros
# Pergunta 4:
# Qual a variância da coluna idade?
idade_variancia = sqldf("select variance(Idade) as Variancia from dados")
idade_variancia
# A variância da idade é 48,34
# Pergunta 5:
# Qual o gasto total com internações hospitalares por idade?
gasto_total_idade = sqldf("select Idade, sum(CustoInternaçao) as Custo from dados group by Idade")
gasto_total_idade
# Pergunta 6
# Qual idade gera o maior gasto total com internações hospitalares?
gasto_total_idade_maior = sqldf("select Idade, max(Custo) as Custo from (select Idade, sum(CustoInternaçao) as Custo from dados group by Idade)")
gasto_total_idade_maior
# A idade que mais gera gasto total é a idade 0
# Pergunta 7
# Qual o gasto total com internações hospitalares por gênero?
gasto_total_genero = sqldf("select Sexo, sum(CustoInternaçao) as Custo from dados group by Sexo")
gasto_total_genero
# O sexo masculino gera mais gastos do que o feminino
# Pergunta 8
# Qual a média de gasto com internações hospitalares por raça do paciente?
gasto_medio_raca = sqldf("select Raça, avg(CustoInternaçao) as MediaCusto from dados group by Raça")
gasto_medio_raca
# Pergunta 9
# Para  pacientes  acima  de  10  anos,  qual  a  média  de  gasto  total  com  internações hospitalares?
gasto_medio_idade_acima10 = sqldf("select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade > 10 group by Idade")
gasto_medio_idade_acima10
# A média de gasto com internações para pacientes acima de 10 anos é 3.213,66
# Pergunta 10
# Considerando o item anterior, qual idade tem média de gastos superior a 3000?
gasto_medio_idade_acima10_maior3k = sqldf("Select Idade, avg(CustoInternaçao) as MediaCusto from dados where Idade > 10 group by Idade having MediaCusto > 3000")
gasto_medio_idade_acima10_maior3k
View(dados)
hist(dados$Idade)
resumo_idade = summary(as.factor(dados$Idade))
resumo_idade
ggplot(dados, aes(x = Idade)) +
geom_histogram() +
labs(title = "Distribuição da Idade") +
ylab(label = "")
?hist
hist(dados$Idade, breaks = 5)
# Pergunta 2
# Qual faixa etária tem o maior gasto total no hospital?
?aggregate
aggregate(dados$Idade, by = 4)
dados %>% aggregate(dados$Idade, by = 4)
dados %>% aggregate(Idade, by = 4)
dados %>% aggregate(Idade, by = 4)
gasto_total_faixa_etaria = aggregate(data = dados,
CustoInternaçao ~ Idade,
FUN = sum)
gasto_total_faixa_etaria
which.max(tapply(gasto_total_faixa_etaria$CustoInternaçao,
gasto_total_faixa_etaria$CustoInternaçao,
FUN = sum))
barplot(tapply(gasto_total_faixa_etaria$CustoInternaçao,
gasto_total_faixa_etaria$Idade,
fun = sum))
barplot(tapply(gasto_total_faixa_etaria$CustoInternaçao,
gasto_total_faixa_etaria$Idade,
FUN = sum))
dados %>%
summarise(soma = sum(CustoInternaçao),
maximo = max(CustoInternaçao)) %>%
group_by(GrupoDiagnosticoRefinado) %>%
select(GrupoDiagnosticoRefinado, maximo)
dados %>%
summarise(soma = sum(CustoInternaçao),
maximo = max(CustoInternaçao)) %>%
group_by(GrupoDiagnosticoRefinado)
dados %>%
group_by(GrupoDiagnosticoRefinado) %>%
summarise(soma = sum(CustoInternaçao),
maximo = max(CustoInternaçao))
dados %>%
group_by(GrupoDiagnosticoRefinado) %>%
summarise(soma = sum(CustoInternaçao)) %>%
arrange(desc(soma))
gasto_total_grupo = aggregate(data = dados,
CustoInternaçao ~ GrupoDiagnosticoRefinado,
FUN = sum)
gasto_total_grupo
gasto_total_grupo[which.max(gasto_total_grupo$CustoInternaçao),]
# Pergunta 2
# Qual faixa etária tem o maior gasto total no hospital?
?aggregate
which.max(gasto_total_grupo$CustoInternaçao)
dados %>%
group_by(GrupoDiagnosticoRefinado) %>%
summarise(soma = sum(CustoInternaçao)) %>%
arrange(desc(soma))
gasto_total_grupo[which.max(gasto_total_grupo$CustoInternaçao),]
dados %>%
group_by(GrupoDiagnosticoRefinado) %>%
summarise(Gasto = sum(CustoInternaçao)) %>%
arrange(desc(Gasto))
gasto_total_grupo[which.max(gasto_total_grupo$CustoInternaçao),]
?aov
teste_anova = aov(CustoInternaçao ~ Raça, data = dados)
teste_anova
summary(teste_anova)
teste_anova_2 = aov(CustoInternaçao ~ Raça + Sexo, data = dados)
teste_anova_2
summary(teste_anova_2)
teste_anova_2 = aov(CustoInternaçao ~ Idade + Sexo, data = dados)
teste_anova_2
summary(teste_anova_2)
modelo = lm(TempoInetrnaçao ~ Idade + Sexo + Raça, data = dados)
modelo = lm(TempoIneternaçao ~ Idade + Sexo + Raça, data = dados)
modelo = lm(TempoInternaçao ~ Idade + Sexo + Raça, data = dados)
modelo
# Pergunta 6
# Como o tempo de permanência é o fator crucial para pacientes internados,
# desejamos descobrir se o tempo de permanência pode ser previsto a partir de idade, gênero e raça.
?sample
modelo
summary(modelo)
modelo_v2 = lm(TempoInternaçao ~ ., data = dados)
modelo_v2
summary(modelo_v2)
modelo_v2 = lm(CustoInternaçao ~ ., data = dados)
modelo_v2
summary(modelo_v2)
modelo_v3 = lm(CustoInternaçao ~ Idade + Sexo + TempoInternaçao + GrupoDiagnosticoRefinado, data = dados)
modelo_v3
summary(modelo_v3)
modelo_v4 = lm(CustoInternaçao ~ Idade + TempoInternaçao + GrupoDiagnosticoRefinado, data = dados)
summary(modelo_v4)
summary(modelo_v3)
summary(modelo_v4)
modelo_v5 = lm(CustoInternaçao ~ Idade + TempoInternaçao, data = dados)
summary(modelo_v5)
summary(modelo)
summary(modelo_v4)
summary(modelo_v5)
summary(modelo_v4)
library(dplyr)
library(sqldf)
library(ggplot2)
dados = read.csv("dataset.csv")
View(dados)
nome_colunas = c("Idade", "Sexo", "TempoInternaçao", "Raça", "CustoInternaçao", "GrupoDiagnosticoRefinado")
names(dados) = nome_colunas
library(dplyr)
library(sqldf)
library(ggplot2)
dados = read.csv("dataset.csv")
View(dados)
gasto_total_idade = sqldf("select Idade, sum(CustoInternaçao) as Custo from dados group by Idade")
gasto_total_idade
hist(dados$Idade)
hist(dados$Idade)
resumo_idade = summary(as.factor(dados$Idade))
resumo_idade
dados = read.csv("dataset.csv")
# Renomeando as variáveis
nome_colunas = c("Idade", "Sexo", "TempoInternaçao", "Raça", "CustoInternaçao", "GrupoDiagnosticoRefinado")
names(dados) = nome_colunas
# Checando valores missing
sum(is.na(dados))
dim(dados)
# Excluindo a única linha que contem um valor missing
dados = na.omit(dados)
dim(dados)
# Checando os tipos de dados
str(dados)
# Transformando a variável Sexo para fator
unique(dados$Sexo)
dados$Sexo = as.factor(dados$Sexo)
# Transformando a variável Raça para fator
unique(dados$Raça)
dados$Raça = as.factor(dados$Raça)
# Checando os tipos de dados
str(dados)
dados = read.csv("dataset.csv")
View(dados)
# Renomeando as variáveis
nome_colunas = c("Idade", "Sexo", "TempoInternaçao", "Raça", "CustoInternaçao", "GrupoDiagnosticoRefinado")
names(dados) = nome_colunas
# Checando valores missing
sum(is.na(dados))
dim(dados)
# Excluindo a única linha que contem um valor missing
dados = na.omit(dados)
dim(dados)
# Checando os tipos de dados
str(dados)
# Transformando a variável Sexo para fator
unique(dados$Sexo)
dados$Sexo = as.factor(dados$Sexo)
# Transformando a variável Raça para fator
unique(dados$Raça)
dados$Raça = as.factor(dados$Raça)
sqldf("select Raça, count(Raça) as NumeroRaças from dados group by Raça")
hist(dados$Idade)
summary(as.factor(dados$Idade))
ggplot(dados, aes(x = Idade)) +
geom_histogram() +
labs(title = "Distribuição da Idade") +
ylab(label = "")
gasto_total_faixa_etaria = aggregate(data = dados,
CustoInternaçao ~ Idade,
FUN = sum)
gasto_total_faixa_etaria
which.max(tapply(gasto_total_faixa_etaria$CustoInternaçao,
gasto_total_faixa_etaria$CustoInternaçao,
FUN = sum))
barplot(tapply(gasto_total_faixa_etaria$CustoInternaçao,
gasto_total_faixa_etaria$Idade,
FUN = sum))
summary(as.factor(dados$Idade))
gasto_total_faixa_etaria = aggregate(data = dados,
CustoInternaçao ~ Idade,
FUN = sum)
gasto_total_faixa_etaria = aggregate(data = dados,
CustoInternaçao ~ Idade,
FUN = sum)
gasto_total_faixa_etaria = aggregate(data = dados,
CustoInternaçao ~ Idade,
FUN = sum)
View(gasto_total_faixa_etaria)
gasto_total_faixa_etaria
which.max(tapply(gasto_total_faixa_etaria$CustoInternaçao,
gasto_total_faixa_etaria$CustoInternaçao,
FUN = sum))
barplot(tapply(gasto_total_faixa_etaria$CustoInternaçao,
gasto_total_faixa_etaria$Idade,
FUN = sum))
gasto_total_faixa_etaria
